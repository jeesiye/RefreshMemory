主要类概览
-----------------------------------------------------------------------------------------------------------------------------
A:java.nio.channels.DatagramChannel
A:java.nio.channels.ServerSocketChannel
A:java.nio.channels.SocketChannel
-----------------------------------------------------------------------------------------------------------------------------
波及类概览
-----------------------------------------------------------------------------------------------------------------------------
A:java.nio.channels.SelectorChannel
A:java.nio.channels.AbstractSelectorChannel
A:java.nio.channels.Selector
A:java.nio.channels.SelectionKey
A:java.net.SocketAddress                                等其他需要使用到的java.net的类,不一一赘述;
-----------------------------------------------------------------------------------------------------------------------------

1. TCP和UDP的区别
    1) 基于连接与无连接;
    2) 基于数据流;基于数据包;
    3) 保证数据的正确性;可能丢包;
    4) 保证数据顺序;不保证数据顺序;

2. nio包中的体现
     1) 基于UDP的实现是DatagramChannel;
     2) 基于TCP的实现是ServerSocketChannel和SocketChannel;
     3) 在异步信道中只有基于TCP的,AsynchronousServerSocketChannel和AsynchronousSocketChannel;

3. A:java.nio.channels.DatagramChannel(基于UDP的网络信道)
-----------------------------------------------------------------------------------------------------------------------------
open <p0> : DatagramChannel                         创建数据包信道;
open <p1> : DatagramChannel                         \
-----------------------------------------------------------------------------------------------------------------------------
bind <p1> : DatagramChannel                         绑定地址;
connect <p1> : DatagramChannel                      连接地址;
disconnect <p0> : DatagramChannel                   关闭连接;
-----------------------------------------------------------------------------------------------------------------------------
send <p2> : int                                     发送数据包;
receive <p1> : SocketAddress                        接收数据包;
read <p1> : int                                     读取信道数据包;
read <p1> : long                                    \
read <p3> : long                                    \
write <p1> : int                                    数据包写入到信道;
write <p1> : long                                   \
write <p3> : long                                   \
-----------------------------------------------------------------------------------------------------------------------------
getLocalAddress <p0> : SocketAddress                获取本地绑定的地址;
getRemoteAddress <p0> : SocketAddress               获取远程连接的地址;
isConnected <p0> : boolean                          当前套接字是否连接;
socket <p0> : DatagramSocket                        返回关联此信道的数据包套接字;
-----------------------------------------------------------------------------------------------------------------------------
setOption <p2> : DatagramChannel                    设置信道操作值(合法的值参考当前类的doc文档);
validOps <p0> : int                                 获取当前类支持的合法的操作值;
-----------------------------------------------------------------------------------------------------------------------------

4. A:java.nio.channels.ServerSocketChannel(基于TCP的网络信道的服务端)
-----------------------------------------------------------------------------------------------------------------------------
open <p0> : ServerSocketChannel                     创建服务器套接字;
-----------------------------------------------------------------------------------------------------------------------------
bind <p1> : ServerSocketChannel                     绑定本地地址;
bind <p2> : ServerSocketChannel                     \
accept <p0> : SocketChannel                         进入等待通信状态;
-----------------------------------------------------------------------------------------------------------------------------
getLocalAddress <p0> : SocketAddress                获取绑定的本地地址;
socket <p0> : ServerSocket                          返回关联此信道的服务器套接字;
-----------------------------------------------------------------------------------------------------------------------------
setOption <p2> : ServerSocketChannel                设置信道操作值(合法的参考当前类的doc文档);
validOps <p0> : int                                 获取当前类支持的合法的操作值;
-----------------------------------------------------------------------------------------------------------------------------

5. A:java.nio.chennels.SocketChannel(基于TCP的网络信道的客户端)
-----------------------------------------------------------------------------------------------------------------------------
open <p0> : SocketChannel                           创建客户端套接字;
open <p1> : SocketChannel                           \
-----------------------------------------------------------------------------------------------------------------------------
bind <p1> : SocketChannel                           绑定本地地址;
connect <p1> : boolean                              连接通信地址;
-----------------------------------------------------------------------------------------------------------------------------
read <p1> : int                                     读取信道中数据流;
read <p1> : long                                    \
read <p3> : long                                    \
write <p1> : int                                    数据流写入到信道中;
write <p1> : long                                   \
write <p3> : long                                   \
-----------------------------------------------------------------------------------------------------------------------------
shutdownInput <p0> : SocketChannel                  关闭连接进行读取,但不关闭信道;
shutdownOutput <p0> : SocketChannel                 关闭连接进行写入,但不关闭信道;
-----------------------------------------------------------------------------------------------------------------------------
getLocalAddress <p0> : SocketAddress                获取本地地址;
getRemoteAddress <p0> : SocketAddress               获取远程地址;
isConnected <p0> : boolean                          当前套接字是否连接;
isConnectionPending <p0> : boolean                  当前信道是否在进行连接操作;
finishConnect <p0> : boolean                        是否完成连接;
socket <p0> : Socket                                返回关联此信道的客户端套接字;
-----------------------------------------------------------------------------------------------------------------------------
setOption <p2> : SocketChannel                      设置信道操作值(合法的值参考当前类的doc文档);
validOps <p0> : int                                 返回当前类支持的合法的操作值;
-----------------------------------------------------------------------------------------------------------------------------

6. A:java.nio.channels.MembershipKey(MulticasetChannel涉及,是为DatagramChannel)
-----------------------------------------------------------------------------------------------------------------------------
block <p1> : MembershipKey                           指定地址加入组播的黑名单;
unblock <p1> : MembershipKey                         指定地址解除组播的黑名单;
drop <p0> : void                                     删除此令牌;
isValid <p0> : boolean                               此令牌是否是合法的;
-----------------------------------------------------------------------------------------------------------------------------
channel <p0> : MulticastChannel                      返回创建此令牌的信道;
networkInterface <p0> : NetworkInterface             返回创建此令牌的网络接口;
group <p0> : InetAddress                             返回创建此令牌的组播地址;
-----------------------------------------------------------------------------------------------------------------------------
sourceAddress <p0> : InetAddress                     若令牌的源地址是确定的,则返回源地址;
-----------------------------------------------------------------------------------------------------------------------------
6.1 令牌的实例如何创建?
      1)通过MulticastChannel#join函数来创建;
      2)涉及到java.net包;
      3)涉及组播地址和网络接口的概念认知;
